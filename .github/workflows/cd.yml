name: GKE Deploy

on:
  pull_request:
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: nycu-lab-9-cluster   # TODO: update to cluster name
  GKE_ZONE: asia-east1-b   # TODO: update to cluster zone


jobs:
  DockerPush:
    name: Publish Docker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: takidog/apc:latest
  GKEDeploy:
    name: GKE Deploy
    runs-on: ubuntu-latest
    needs: [DockerPush]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    # Setup gcloud CLI
    - id: 'auth'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.GKE_SA_KEY }}'
    - uses: google-github-actions/setup-gcloud@v0
      with:
        project_id: ${{ secrets.GKE_PROJECT }}

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker
    # Get the GKE credentials so we can deploy to the cluster
    - run: |-
        gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"

    - name: Deploy nats
      run: |-
        cd ./infra/nats
        kubectl apply -f deployment.yml
        kubectl apply -f service.yml
        kubectl get services -o wide
    - name: Deploy mongo
      run: |-
        cd ./infra/mongo
        kubectl apply -f deployment.yml
        kubectl apply -f service.yml
        kubectl get services -o wide
    - name: Deploy apc
      run: |-
        cd ./infra/app
        kubectl apply -f deployment.yml
    - name: Get-logs
      run: |-
        kubectl logs -l app=apc-simulator